

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Dec 05 10:41:12 2023

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0006                     _PORTB	set	6
   169  0007                     _PORTC	set	7
   170  0033                     _RB3	set	51
   171  0032                     _RB2	set	50
   172  0030                     _RB0	set	48
   173  0042                     _RD2	set	66
   174  0041                     _RD1	set	65
   175  0040                     _RD0	set	64
   176  0087                     _TRISC	set	135
   177  0442                     _TRISD2	set	1090
   178  0441                     _TRISD1	set	1089
   179  0440                     _TRISD0	set	1088
   180  0447                     _TRISD7	set	1095
   181  0433                     _TRISB3	set	1075
   182  0432                     _TRISB2	set	1074
   183                           
   184                           	psect	strings
   185  0003                     __pstrings:	
   186  0003                     stringtab:	
   187  0003                     __stringtab:	
   188  0003                     stringcode:	
   189                           ;	String table - string pointers are 1 byte each
   190                           
   191  0003                     stringdir:	
   192  0003  3000               	movlw	high stringdir
   193  0004  008A               	movwf	10
   194  0005  0804               	movf	4,w
   195  0006  0A84               	incf	4,f
   196  0007  0782               	addwf	2,f
   197  0008                     __stringbase:	
   198  0008  3400               	retlw	0
   199  0009                     __end_of__stringtab:	
   200  0009                     STR_6:	
   201  0009  3444               	retlw	68	;'D'
   202  000A  3465               	retlw	101	;'e'
   203  000B  3420               	retlw	32	;' '
   204  000C  3453               	retlw	83	;'S'
   205  000D  3465               	retlw	101	;'e'
   206  000E  3467               	retlw	103	;'g'
   207  000F  3475               	retlw	117	;'u'
   208  0010  3472               	retlw	114	;'r'
   209  0011  3461               	retlw	97	;'a'
   210  0012  346E               	retlw	110	;'n'
   211  0013  343F               	retlw	63	;'?'
   212  0014  3461               	retlw	97	;'a'
   213  0015  3400               	retlw	0
   214  0016                     STR_1:	
   215  0016  344D               	retlw	77	;'M'
   216  0017  344F               	retlw	79	;'O'
   217  0018  3456               	retlw	86	;'V'
   218  0019  3445               	retlw	69	;'E'
   219  001A  344D               	retlw	77	;'M'
   220  001B  3445               	retlw	69	;'E'
   221  001C  344E               	retlw	78	;'N'
   222  001D  3454               	retlw	84	;'T'
   223  001E  344F               	retlw	79	;'O'
   224  001F  3400               	retlw	0
   225  0020                     STR_2:	
   226  0020  3444               	retlw	68	;'D'
   227  0021  3465               	retlw	101	;'e'
   228  0022  3474               	retlw	116	;'t'
   229  0023  3465               	retlw	101	;'e'
   230  0024  3474               	retlw	116	;'t'
   231  0025  3461               	retlw	97	;'a'
   232  0026  3464               	retlw	100	;'d'
   233  0027  346F               	retlw	111	;'o'
   234  0028  3400               	retlw	0
   235  0029                     STR_3:	
   236  0029  3444               	retlw	68	;'D'
   237  002A  3469               	retlw	105	;'i'
   238  002B  3467               	retlw	103	;'g'
   239  002C  3469               	retlw	105	;'i'
   240  002D  3474               	retlw	116	;'t'
   241  002E  3465               	retlw	101	;'e'
   242  002F  3420               	retlw	32	;' '
   243  0030  3400               	retlw	0
   244  0031                     STR_5:	
   245  0031  3441               	retlw	65	;'A'
   246  0032  3463               	retlw	99	;'c'
   247  0033  3465               	retlw	101	;'e'
   248  0034  3473               	retlw	115	;'s'
   249  0035  3473               	retlw	115	;'s'
   250  0036  346F               	retlw	111	;'o'
   251  0037  3400               	retlw	0
   252  0038                     STR_4:	
   253  0038  3453               	retlw	83	;'S'
   254  0039  3465               	retlw	101	;'e'
   255  003A  346E               	retlw	110	;'n'
   256  003B  3468               	retlw	104	;'h'
   257  003C  3461               	retlw	97	;'a'
   258  003D  3400               	retlw	0
   259                           
   260                           	psect	cinit
   261  07FC                     start_initialization:	
   262                           ; #config settings
   263                           
   264  07FC                     __initialization:	
   265  07FC                     end_of_initialization:	
   266                           ;End of C runtime variable initialization code
   267                           
   268  07FC                     __end_of__initialization:	
   269  07FC  0183               	clrf	3
   270  07FD  120A  118A  2F5C   	ljmp	_main	;jump to C main() function
   271                           
   272                           	psect	cstackCOMMON
   273  0070                     __pcstackCOMMON:	
   274  0070                     ?_lcd_data:	
   275  0070                     ??_lcd_data:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0070                     ?_lcd_command:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0070                     ??_lcd_command:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0070                     ?_lcd_init:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     ?_main:	
   288                           ; 1 bytes @ 0x0
   289                           
   290                           
   291                           ; 1 bytes @ 0x0
   292  0070                     	ds	2
   293  0072                     lcd_data@data:	
   294  0072                     lcd_command@cmd:	
   295                           ; 1 bytes @ 0x2
   296                           
   297                           
   298                           ; 1 bytes @ 0x2
   299  0072                     	ds	1
   300  0073                     ?_lcd_string:	
   301  0073                     ??_lcd_init:	
   302                           ; 1 bytes @ 0x3
   303                           
   304  0073                     lcd_string@num:	
   305                           ; 1 bytes @ 0x3
   306                           
   307                           
   308                           ; 1 bytes @ 0x3
   309  0073                     	ds	1
   310  0074                     ??_lcd_string:	
   311                           
   312                           ; 1 bytes @ 0x4
   313  0074                     	ds	1
   314  0075                     lcd_string@i:	
   315                           
   316                           ; 1 bytes @ 0x5
   317  0075                     	ds	1
   318  0076                     lcd_string@str:	
   319                           
   320                           ; 1 bytes @ 0x6
   321  0076                     	ds	1
   322  0077                     ??_main:	
   323                           
   324                           ; 1 bytes @ 0x7
   325  0077                     	ds	3
   326                           
   327                           	psect	maintext
   328  075C                     __pmaintext:	
   329 ;;
   330 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   331 ;;
   332 ;; *************** function _main *****************
   333 ;; Defined at:
   334 ;;		line 55 in file "principal.c"
   335 ;; Parameters:    Size  Location     Type
   336 ;;		None
   337 ;; Auto vars:     Size  Location     Type
   338 ;;		None
   339 ;; Return value:  Size  Location     Type
   340 ;;                  1    wreg      void 
   341 ;; Registers used:
   342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   343 ;; Tracked objects:
   344 ;;		On entry : B00/0
   345 ;;		On exit  : 0/0
   346 ;;		Unchanged: 0/0
   347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   348 ;;      Params:         0       0       0       0       0
   349 ;;      Locals:         0       0       0       0       0
   350 ;;      Temps:          3       0       0       0       0
   351 ;;      Totals:         3       0       0       0       0
   352 ;;Total ram usage:        3 bytes
   353 ;; Hardware stack levels required when called:    2
   354 ;; This function calls:
   355 ;;		_lcd_command
   356 ;;		_lcd_init
   357 ;;		_lcd_string
   358 ;; This function is called by:
   359 ;;		Startup code after reset
   360 ;; This function uses a non-reentrant model
   361 ;;
   362                           
   363                           
   364                           ;psect for function _main
   365  075C                     _main:	
   366  075C                     l731:	
   367                           ;incstack = 0
   368                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   369                           
   370                           
   371                           ;principal.c: 57:     TRISB2=0;
   372  075C  1683               	bsf	3,5	;RP0=1, select bank1
   373  075D  1303               	bcf	3,6	;RP1=0, select bank1
   374  075E  1106               	bcf	6,2	;volatile
   375                           
   376                           ;principal.c: 58:     TRISB3=0;
   377  075F  1186               	bcf	6,3	;volatile
   378                           
   379                           ;principal.c: 59:     TRISD7=1;
   380  0760  1788               	bsf	8,7	;volatile
   381  0761                     l733:	
   382                           
   383                           ;principal.c: 60:     PORTB=0X00;
   384  0761  1283               	bcf	3,5	;RP0=0, select bank0
   385  0762  1303               	bcf	3,6	;RP1=0, select bank0
   386  0763  0186               	clrf	6	;volatile
   387                           
   388                           ;principal.c: 62:     TRISC=0X00;
   389  0764  1683               	bsf	3,5	;RP0=1, select bank1
   390  0765  1303               	bcf	3,6	;RP1=0, select bank1
   391  0766  0187               	clrf	7	;volatile
   392  0767                     l735:	
   393                           
   394                           ;principal.c: 63:     TRISD0=0;
   395  0767  1008               	bcf	8,0	;volatile
   396  0768                     l737:	
   397                           
   398                           ;principal.c: 64:     TRISD1=0;
   399  0768  1088               	bcf	8,1	;volatile
   400  0769                     l739:	
   401                           
   402                           ;principal.c: 65:     TRISD2=0;
   403  0769  1108               	bcf	8,2	;volatile
   404  076A                     l741:	
   405                           
   406                           ;principal.c: 66:     lcd_init();
   407  076A  120A  118A  2728  120A  118A  	fcall	_lcd_init
   408  076F                     l743:	
   409                           
   410                           ;principal.c: 69:     {;principal.c: 70:         if(RB0 ==1){
   411  076F  1283               	bcf	3,5	;RP0=0, select bank0
   412  0770  1303               	bcf	3,6	;RP1=0, select bank0
   413  0771  1C06               	btfss	6,0	;volatile
   414  0772  2F74               	goto	u41
   415  0773  2F75               	goto	u40
   416  0774                     u41:	
   417  0774  2FD6               	goto	l53
   418  0775                     u40:	
   419  0775                     l745:	
   420                           
   421                           ;principal.c: 71:             RB2=1;
   422  0775  1506               	bsf	6,2	;volatile
   423                           
   424                           ;principal.c: 72:             RB3=1;
   425  0776  1586               	bsf	6,3	;volatile
   426  0777                     l747:	
   427                           
   428                           ;principal.c: 73:             lcd_command(0x83);
   429  0777  3083               	movlw	131
   430  0778  120A  118A  26FE  120A  118A  	fcall	_lcd_command
   431  077D                     l749:	
   432                           
   433                           ;principal.c: 74:             lcd_string("MOVEMENTO", 8);
   434  077D  3008               	movlw	8
   435  077E  00F7               	movwf	??_main
   436  077F  0877               	movf	??_main,w
   437  0780  00F3               	movwf	lcd_string@num
   438  0781  300E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   439  0782  120A  118A  2741  120A  118A  	fcall	_lcd_string
   440  0787                     l751:	
   441                           
   442                           ;principal.c: 75:             lcd_command(0xC3);
   443  0787  30C3               	movlw	195
   444  0788  120A  118A  26FE  120A  118A  	fcall	_lcd_command
   445                           
   446                           ;principal.c: 76:             lcd_string("Detetado", 11);
   447  078D  300B               	movlw	11
   448  078E  00F7               	movwf	??_main
   449  078F  0877               	movf	??_main,w
   450  0790  00F3               	movwf	lcd_string@num
   451  0791  3018               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   452  0792  120A  118A  2741  120A  118A  	fcall	_lcd_string
   453  0797                     l753:	
   454                           
   455                           ;principal.c: 77:             _delay((unsigned long)((500)*(20000000/4000.0)));
   456  0797  300D               	movlw	13
   457  0798  00F9               	movwf	??_main+2
   458  0799  30AF               	movlw	175
   459  079A  00F8               	movwf	??_main+1
   460  079B  30B6               	movlw	182
   461  079C  00F7               	movwf	??_main
   462  079D                     u57:	
   463  079D  0BF7               	decfsz	??_main,f
   464  079E  2F9D               	goto	u57
   465  079F  0BF8               	decfsz	??_main+1,f
   466  07A0  2F9D               	goto	u57
   467  07A1  0BF9               	decfsz	??_main+2,f
   468  07A2  2F9D               	goto	u57
   469  07A3  0000               	nop
   470  07A4                     l755:	
   471                           
   472                           ;principal.c: 78:             RB2=0;
   473  07A4  1283               	bcf	3,5	;RP0=0, select bank0
   474  07A5  1303               	bcf	3,6	;RP1=0, select bank0
   475  07A6  1106               	bcf	6,2	;volatile
   476  07A7                     l757:	
   477                           
   478                           ;principal.c: 79:             RB3=0;
   479  07A7  1186               	bcf	6,3	;volatile
   480  07A8                     l759:	
   481                           
   482                           ;principal.c: 80:             lcd_command(0x01);
   483  07A8  3001               	movlw	1
   484  07A9  120A  118A  26FE  120A  118A  	fcall	_lcd_command
   485  07AE                     l761:	
   486                           
   487                           ;principal.c: 81:             lcd_string("Digite ", 8);
   488  07AE  3008               	movlw	8
   489  07AF  00F7               	movwf	??_main
   490  07B0  0877               	movf	??_main,w
   491  07B1  00F3               	movwf	lcd_string@num
   492  07B2  3021               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   493  07B3  120A  118A  2741  120A  118A  	fcall	_lcd_string
   494  07B8                     l763:	
   495                           
   496                           ;principal.c: 82:             lcd_command(0xC3);
   497  07B8  30C3               	movlw	195
   498  07B9  120A  118A  26FE  120A  118A  	fcall	_lcd_command
   499  07BE                     l765:	
   500                           
   501                           ;principal.c: 83:             lcd_string("Senha", 11);
   502  07BE  300B               	movlw	11
   503  07BF  00F7               	movwf	??_main
   504  07C0  0877               	movf	??_main,w
   505  07C1  00F3               	movwf	lcd_string@num
   506  07C2  3030               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   507  07C3  120A  118A  2741  120A  118A  	fcall	_lcd_string
   508  07C8                     l767:	
   509                           
   510                           ;principal.c: 84:             _delay((unsigned long)((5000)*(20000000/4000.0)));
   511  07C8  307F               	movlw	127
   512  07C9  00F9               	movwf	??_main+2
   513  07CA  30D4               	movlw	212
   514  07CB  00F8               	movwf	??_main+1
   515  07CC  3031               	movlw	49
   516  07CD  00F7               	movwf	??_main
   517  07CE                     u67:	
   518  07CE  0BF7               	decfsz	??_main,f
   519  07CF  2FCE               	goto	u67
   520  07D0  0BF8               	decfsz	??_main+1,f
   521  07D1  2FCE               	goto	u67
   522  07D2  0BF9               	decfsz	??_main+2,f
   523  07D3  2FCE               	goto	u67
   524  07D4  2FD5               	nop2
   525                           
   526                           ;principal.c: 85:         }
   527  07D5  2F6F               	goto	l743
   528  07D6                     l53:	
   529                           ;principal.c: 86:         else{
   530                           
   531                           
   532                           ;principal.c: 87:             RB2=0;
   533  07D6  1106               	bcf	6,2	;volatile
   534                           
   535                           ;principal.c: 88:             RB3=0;
   536  07D7  1186               	bcf	6,3	;volatile
   537  07D8                     l769:	
   538                           
   539                           ;principal.c: 89:             lcd_command(0x83);
   540  07D8  3083               	movlw	131
   541  07D9  120A  118A  26FE  120A  118A  	fcall	_lcd_command
   542  07DE                     l771:	
   543                           
   544                           ;principal.c: 90:             lcd_string("Acesso", 8);
   545  07DE  3008               	movlw	8
   546  07DF  00F7               	movwf	??_main
   547  07E0  0877               	movf	??_main,w
   548  07E1  00F3               	movwf	lcd_string@num
   549  07E2  3029               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   550  07E3  120A  118A  2741  120A  118A  	fcall	_lcd_string
   551  07E8                     l773:	
   552                           
   553                           ;principal.c: 91:             lcd_command(0xC3);
   554  07E8  30C3               	movlw	195
   555  07E9  120A  118A  26FE  120A  118A  	fcall	_lcd_command
   556                           
   557                           ;principal.c: 92:             lcd_string("De Seguran?a", 11);
   558  07EE  300B               	movlw	11
   559  07EF  00F7               	movwf	??_main
   560  07F0  0877               	movf	??_main,w
   561  07F1  00F3               	movwf	lcd_string@num
   562  07F2  3001               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   563  07F3  120A  118A  2741  120A  118A  	fcall	_lcd_string
   564  07F8  2F6F               	goto	l743
   565  07F9  120A  118A  2800   	ljmp	start
   566  07FC                     __end_of_main:	
   567                           
   568                           	psect	text1
   569  0741                     __ptext1:	
   570 ;; *************** function _lcd_string *****************
   571 ;; Defined at:
   572 ;;		line 38 in file "principal.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;  str             1    wreg     PTR const unsigned char 
   575 ;;		 -> STR_6(13), STR_5(7), STR_4(6), STR_3(8), 
   576 ;;		 -> STR_2(9), STR_1(10), 
   577 ;;  num             1    3[COMMON] unsigned char 
   578 ;; Auto vars:     Size  Location     Type
   579 ;;  str             1    6[COMMON] PTR const unsigned char 
   580 ;;		 -> STR_6(13), STR_5(7), STR_4(6), STR_3(8), 
   581 ;;		 -> STR_2(9), STR_1(10), 
   582 ;;  i               1    5[COMMON] unsigned char 
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   592 ;;      Params:         1       0       0       0       0
   593 ;;      Locals:         2       0       0       0       0
   594 ;;      Temps:          1       0       0       0       0
   595 ;;      Totals:         4       0       0       0       0
   596 ;;Total ram usage:        4 bytes
   597 ;; Hardware stack levels used:    1
   598 ;; Hardware stack levels required when called:    1
   599 ;; This function calls:
   600 ;;		_lcd_data
   601 ;; This function is called by:
   602 ;;		_main
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           
   607                           ;psect for function _lcd_string
   608  0741                     _lcd_string:	
   609                           
   610                           ;incstack = 0
   611                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   612                           ;lcd_string@str stored from wreg
   613  0741  00F6               	movwf	lcd_string@str
   614  0742                     l723:	
   615                           
   616                           ;principal.c: 38: void lcd_string(const unsigned char *str, unsigned char num);principal
      +                          .c: 39: {;principal.c: 40:     unsigned char i;;principal.c: 41:     for(i = 0; i < num;
      +                           i++)
   617  0742  01F5               	clrf	lcd_string@i
   618  0743  2F55               	goto	l729
   619  0744                     l725:	
   620                           
   621                           ;principal.c: 42:     {;principal.c: 43:         lcd_data(str[i]);
   622  0744  0875               	movf	lcd_string@i,w
   623  0745  0776               	addwf	lcd_string@str,w
   624  0746  0084               	movwf	4
   625  0747  120A  118A  2003  120A  118A  	fcall	stringdir
   626  074C  120A  118A  2713  120A  118A  	fcall	_lcd_data
   627  0751                     l727:	
   628                           
   629                           ;principal.c: 44:     }
   630  0751  3001               	movlw	1
   631  0752  00F4               	movwf	??_lcd_string
   632  0753  0874               	movf	??_lcd_string,w
   633  0754  07F5               	addwf	lcd_string@i,f
   634  0755                     l729:	
   635  0755  0873               	movf	lcd_string@num,w
   636  0756  0275               	subwf	lcd_string@i,w
   637  0757  1C03               	skipc
   638  0758  2F5A               	goto	u31
   639  0759  2F5B               	goto	u30
   640  075A                     u31:	
   641  075A  2F44               	goto	l725
   642  075B                     u30:	
   643  075B                     l44:	
   644  075B  0008               	return
   645  075C                     __end_of_lcd_string:	
   646                           
   647                           	psect	text2
   648  0713                     __ptext2:	
   649 ;; *************** function _lcd_data *****************
   650 ;; Defined at:
   651 ;;		line 18 in file "principal.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;  data            1    wreg     unsigned char 
   654 ;; Auto vars:     Size  Location     Type
   655 ;;  data            1    2[COMMON] unsigned char 
   656 ;; Return value:  Size  Location     Type
   657 ;;                  1    wreg      void 
   658 ;; Registers used:
   659 ;;		wreg
   660 ;; Tracked objects:
   661 ;;		On entry : 0/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   665 ;;      Params:         0       0       0       0       0
   666 ;;      Locals:         1       0       0       0       0
   667 ;;      Temps:          2       0       0       0       0
   668 ;;      Totals:         3       0       0       0       0
   669 ;;Total ram usage:        3 bytes
   670 ;; Hardware stack levels used:    1
   671 ;; This function calls:
   672 ;;		Nothing
   673 ;; This function is called by:
   674 ;;		_lcd_string
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678                           
   679                           ;psect for function _lcd_data
   680  0713                     _lcd_data:	
   681                           
   682                           ;incstack = 0
   683                           ; Regs used in _lcd_data: [wreg]
   684                           ;lcd_data@data stored from wreg
   685  0713  00F2               	movwf	lcd_data@data
   686  0714                     l649:	
   687                           
   688                           ;principal.c: 18: void lcd_data(unsigned char data);principal.c: 19: {;principal.c: 20: 
      +                              PORTC=data;
   689  0714  0872               	movf	lcd_data@data,w
   690  0715  1283               	bcf	3,5	;RP0=0, select bank0
   691  0716  1303               	bcf	3,6	;RP1=0, select bank0
   692  0717  0087               	movwf	7	;volatile
   693  0718                     l651:	
   694                           
   695                           ;principal.c: 21:     RD0 = 1;
   696  0718  1408               	bsf	8,0	;volatile
   697  0719                     l653:	
   698                           
   699                           ;principal.c: 22:     RD1 = 0;
   700  0719  1088               	bcf	8,1	;volatile
   701  071A                     l655:	
   702                           
   703                           ;principal.c: 23:     RD2 = 1;
   704  071A  1508               	bsf	8,2	;volatile
   705                           
   706                           ;principal.c: 24:     _delay((unsigned long)((5)*(20000000/4000.0)));
   707  071B  3021               	movlw	33
   708  071C  00F1               	movwf	??_lcd_data+1
   709  071D  3076               	movlw	118
   710  071E  00F0               	movwf	??_lcd_data
   711  071F                     u77:	
   712  071F  0BF0               	decfsz	??_lcd_data,f
   713  0720  2F1F               	goto	u77
   714  0721  0BF1               	decfsz	??_lcd_data+1,f
   715  0722  2F1F               	goto	u77
   716  0723  0000               	nop
   717  0724                     l657:	
   718                           
   719                           ;principal.c: 25:     RD2 = 0;
   720  0724  1283               	bcf	3,5	;RP0=0, select bank0
   721  0725  1303               	bcf	3,6	;RP1=0, select bank0
   722  0726  1108               	bcf	8,2	;volatile
   723  0727                     l35:	
   724  0727  0008               	return
   725  0728                     __end_of_lcd_data:	
   726                           
   727                           	psect	text3
   728  0728                     __ptext3:	
   729 ;; *************** function _lcd_init *****************
   730 ;; Defined at:
   731 ;;		line 47 in file "principal.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;		None
   734 ;; Auto vars:     Size  Location     Type
   735 ;;		None
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      void 
   738 ;; Registers used:
   739 ;;		wreg, status,2, status,0, pclath, cstack
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   745 ;;      Params:         0       0       0       0       0
   746 ;;      Locals:         0       0       0       0       0
   747 ;;      Temps:          0       0       0       0       0
   748 ;;      Totals:         0       0       0       0       0
   749 ;;Total ram usage:        0 bytes
   750 ;; Hardware stack levels used:    1
   751 ;; Hardware stack levels required when called:    1
   752 ;; This function calls:
   753 ;;		_lcd_command
   754 ;; This function is called by:
   755 ;;		_main
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759                           
   760                           ;psect for function _lcd_init
   761  0728                     _lcd_init:	
   762  0728                     l677:	
   763                           ;incstack = 0
   764                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   765                           
   766                           
   767                           ;principal.c: 49:     lcd_command(0x38);
   768  0728  3038               	movlw	56
   769  0729  120A  118A  26FE  120A  118A  	fcall	_lcd_command
   770                           
   771                           ;principal.c: 50:     lcd_command(0x06);
   772  072E  3006               	movlw	6
   773  072F  120A  118A  26FE  120A  118A  	fcall	_lcd_command
   774                           
   775                           ;principal.c: 51:     lcd_command(0x0C);
   776  0734  300C               	movlw	12
   777  0735  120A  118A  26FE  120A  118A  	fcall	_lcd_command
   778                           
   779                           ;principal.c: 52:     lcd_command(0x01);
   780  073A  3001               	movlw	1
   781  073B  120A  118A  26FE  120A  118A  	fcall	_lcd_command
   782  0740                     l47:	
   783  0740  0008               	return
   784  0741                     __end_of_lcd_init:	
   785                           
   786                           	psect	text4
   787  06FE                     __ptext4:	
   788 ;; *************** function _lcd_command *****************
   789 ;; Defined at:
   790 ;;		line 28 in file "principal.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;  cmd             1    wreg     unsigned char 
   793 ;; Auto vars:     Size  Location     Type
   794 ;;  cmd             1    2[COMMON] unsigned char 
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      void 
   797 ;; Registers used:
   798 ;;		wreg
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   804 ;;      Params:         0       0       0       0       0
   805 ;;      Locals:         1       0       0       0       0
   806 ;;      Temps:          2       0       0       0       0
   807 ;;      Totals:         3       0       0       0       0
   808 ;;Total ram usage:        3 bytes
   809 ;; Hardware stack levels used:    1
   810 ;; This function calls:
   811 ;;		Nothing
   812 ;; This function is called by:
   813 ;;		_lcd_init
   814 ;;		_main
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           
   819                           ;psect for function _lcd_command
   820  06FE                     _lcd_command:	
   821                           
   822                           ;incstack = 0
   823                           ; Regs used in _lcd_command: [wreg]
   824                           ;lcd_command@cmd stored from wreg
   825  06FE  00F2               	movwf	lcd_command@cmd
   826  06FF                     l659:	
   827                           
   828                           ;principal.c: 28: void lcd_command(unsigned char cmd);principal.c: 29: {;principal.c: 30
      +                          :     PORTC = cmd;
   829  06FF  0872               	movf	lcd_command@cmd,w
   830  0700  1283               	bcf	3,5	;RP0=0, select bank0
   831  0701  1303               	bcf	3,6	;RP1=0, select bank0
   832  0702  0087               	movwf	7	;volatile
   833  0703                     l661:	
   834                           
   835                           ;principal.c: 31:     RD0 = 0;
   836  0703  1008               	bcf	8,0	;volatile
   837  0704                     l663:	
   838                           
   839                           ;principal.c: 32:     RD1 = 0;
   840  0704  1088               	bcf	8,1	;volatile
   841  0705                     l665:	
   842                           
   843                           ;principal.c: 33:     RD2 = 1;
   844  0705  1508               	bsf	8,2	;volatile
   845                           
   846                           ;principal.c: 34:     _delay((unsigned long)((5)*(20000000/4000.0)));
   847  0706  3021               	movlw	33
   848  0707  00F1               	movwf	??_lcd_command+1
   849  0708  3076               	movlw	118
   850  0709  00F0               	movwf	??_lcd_command
   851  070A                     u87:	
   852  070A  0BF0               	decfsz	??_lcd_command,f
   853  070B  2F0A               	goto	u87
   854  070C  0BF1               	decfsz	??_lcd_command+1,f
   855  070D  2F0A               	goto	u87
   856  070E  0000               	nop
   857  070F                     l667:	
   858                           
   859                           ;principal.c: 35:     RD2 = 0;
   860  070F  1283               	bcf	3,5	;RP0=0, select bank0
   861  0710  1303               	bcf	3,6	;RP1=0, select bank0
   862  0711  1108               	bcf	8,2	;volatile
   863  0712                     l38:	
   864  0712  0008               	return
   865  0713                     __end_of_lcd_command:	
   866  007E                     btemp	set	126	;btemp
   867  007E                     wtemp0	set	126


Data Sizes:
    Strings     53
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_string@str	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_6(CODE[13]), STR_5(CODE[7]), STR_4(CODE[6]), STR_3(CODE[8]), 
		 -> STR_2(CODE[9]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_lcd_string
    _lcd_string->_lcd_data
    _lcd_init->_lcd_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     789
                                              7 COMMON     3     3      0
                        _lcd_command
                           _lcd_init
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           4     3      1     759
                                              3 COMMON     4     3      1
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      15
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_command
   _lcd_init
     _lcd_command
   _lcd_string
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Dec 05 10:41:12 2023

                      pc 0002             lcd_data@data 0072                       l35 0727  
                     l44 075B                       l53 07D6                       l38 0712  
                     l47 0740                       u30 075B                       u31 075A  
                     u40 0775                       u41 0774                       u57 079D  
                     u67 07CE                       u77 071F                       u87 070A  
                     fsr 0004                      l651 0718                      l723 0742  
                    l731 075C                      l661 0703                      l653 0719  
                    l725 0744                      l741 076A                      l733 0761  
                    l663 0704                      l655 071A                      l727 0751  
                    l751 0787                      l743 076F                      l735 0767  
                    l665 0705                      l657 0724                      l649 0714  
                    l729 0755                      l761 07AE                      l753 0797  
                    l745 0775                      l737 0768                      l667 070F  
                    l659 06FF                      l771 07DE                      l763 07B8  
                    l755 07A4                      l747 0777                      l739 0769  
                    l677 0728                      l773 07E8                      l765 07BE  
                    l757 07A7                      l749 077D                      l767 07C8  
                    l759 07A8                      l769 07D8                      _RB0 0030  
                    _RB2 0032                      _RB3 0033                      _RD0 0040  
                    _RD1 0041                      _RD2 0042                      fsr0 0004  
                   STR_1 0016                     STR_2 0020                     STR_3 0029  
                   STR_4 0038                     STR_5 0031                     STR_6 0009  
                   _main 075C                     btemp 007E                     start 0000  
            lcd_string@i 0075                    ?_main 0070                    _PORTB 0006  
                  _PORTC 0007                    _TRISC 0087                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0077           lcd_command@cmd 0072  
                 _TRISB2 0432                   _TRISB3 0433                   _TRISD0 0440  
                 _TRISD1 0441                   _TRISD2 0442                   _TRISD7 0447  
       __end_of_lcd_data 0728         __end_of_lcd_init 0741     __size_of_lcd_command 0015  
          lcd_string@num 0073            lcd_string@str 0076  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 075C                ?_lcd_data 0070  
             _lcd_string 0741                ?_lcd_init 0070               __stringtab 0003  
                __ptext1 0741                  __ptext2 0713                  __ptext3 0728  
                __ptext4 06FE               ??_lcd_data 0070               ??_lcd_init 0073  
   end_of_initialization 07FC              ?_lcd_string 0073            ??_lcd_command 0070  
    start_initialization 07FC      __end_of_lcd_command 0713      __size_of_lcd_string 001B  
              ___latbits 0002        __size_of_lcd_data 0015        __size_of_lcd_init 0019  
              __pstrings 0003              _lcd_command 06FE              __stringbase 0008  
           ??_lcd_string 0074       __end_of_lcd_string 075C       __end_of__stringtab 0009  
               _lcd_data 0713                 _lcd_init 0728            __size_of_main 00A0  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
           ?_lcd_command 0070  
